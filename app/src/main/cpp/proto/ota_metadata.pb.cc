// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ota_metadata.proto

#include "ota_metadata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_ota_5fmetadata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ApexInfo_ota_5fmetadata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ota_5fmetadata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OtaMetadata_PropertyFilesEntry_DoNotUse_ota_5fmetadata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ota_5fmetadata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PartitionState_ota_5fmetadata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ota_5fmetadata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DeviceState_ota_5fmetadata_2eproto;
namespace build {
namespace tools {
namespace releasetools {
class PartitionStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PartitionState> _instance;
} _PartitionState_default_instance_;
class DeviceStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceState> _instance;
} _DeviceState_default_instance_;
class ApexInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApexInfo> _instance;
} _ApexInfo_default_instance_;
class ApexMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApexMetadata> _instance;
} _ApexMetadata_default_instance_;
class OtaMetadata_PropertyFilesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OtaMetadata_PropertyFilesEntry_DoNotUse> _instance;
} _OtaMetadata_PropertyFilesEntry_DoNotUse_default_instance_;
class OtaMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OtaMetadata> _instance;
} _OtaMetadata_default_instance_;
}  // namespace releasetools
}  // namespace tools
}  // namespace build
static void InitDefaultsPartitionState_ota_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::build::tools::releasetools::_PartitionState_default_instance_;
    new (ptr) ::build::tools::releasetools::PartitionState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::build::tools::releasetools::PartitionState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PartitionState_ota_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPartitionState_ota_5fmetadata_2eproto}, {}};

static void InitDefaultsDeviceState_ota_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::build::tools::releasetools::_DeviceState_default_instance_;
    new (ptr) ::build::tools::releasetools::DeviceState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::build::tools::releasetools::DeviceState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeviceState_ota_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeviceState_ota_5fmetadata_2eproto}, {
      &scc_info_PartitionState_ota_5fmetadata_2eproto.base,}};

static void InitDefaultsApexInfo_ota_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::build::tools::releasetools::_ApexInfo_default_instance_;
    new (ptr) ::build::tools::releasetools::ApexInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::build::tools::releasetools::ApexInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ApexInfo_ota_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsApexInfo_ota_5fmetadata_2eproto}, {}};

static void InitDefaultsApexMetadata_ota_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::build::tools::releasetools::_ApexMetadata_default_instance_;
    new (ptr) ::build::tools::releasetools::ApexMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::build::tools::releasetools::ApexMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ApexMetadata_ota_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsApexMetadata_ota_5fmetadata_2eproto}, {
      &scc_info_ApexInfo_ota_5fmetadata_2eproto.base,}};

static void InitDefaultsOtaMetadata_PropertyFilesEntry_DoNotUse_ota_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::build::tools::releasetools::_OtaMetadata_PropertyFilesEntry_DoNotUse_default_instance_;
    new (ptr) ::build::tools::releasetools::OtaMetadata_PropertyFilesEntry_DoNotUse();
  }
  ::build::tools::releasetools::OtaMetadata_PropertyFilesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OtaMetadata_PropertyFilesEntry_DoNotUse_ota_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOtaMetadata_PropertyFilesEntry_DoNotUse_ota_5fmetadata_2eproto}, {}};

static void InitDefaultsOtaMetadata_ota_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::build::tools::releasetools::_OtaMetadata_default_instance_;
    new (ptr) ::build::tools::releasetools::OtaMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::build::tools::releasetools::OtaMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_OtaMetadata_ota_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsOtaMetadata_ota_5fmetadata_2eproto}, {
      &scc_info_OtaMetadata_PropertyFilesEntry_DoNotUse_ota_5fmetadata_2eproto.base,
      &scc_info_DeviceState_ota_5fmetadata_2eproto.base,}};

namespace build {
namespace tools {
namespace releasetools {
bool OtaMetadata_OtaType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const OtaMetadata_OtaType OtaMetadata::UNKNOWN;
const OtaMetadata_OtaType OtaMetadata::AB;
const OtaMetadata_OtaType OtaMetadata::BLOCK;
const OtaMetadata_OtaType OtaMetadata::BRICK;
const OtaMetadata_OtaType OtaMetadata::OtaType_MIN;
const OtaMetadata_OtaType OtaMetadata::OtaType_MAX;
const int OtaMetadata::OtaType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void PartitionState::InitAsDefaultInstance() {
}
class PartitionState::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PartitionState::kPartitionNameFieldNumber;
const int PartitionState::kDeviceFieldNumber;
const int PartitionState::kBuildFieldNumber;
const int PartitionState::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PartitionState::PartitionState()
  : ::google::protobuf::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:build.tools.releasetools.PartitionState)
}
PartitionState::PartitionState(const PartitionState& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(nullptr),
      device_(from.device_),
      build_(from.build_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  partition_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.partition_name().size() > 0) {
    partition_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.partition_name_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  // @@protoc_insertion_point(copy_constructor:build.tools.releasetools.PartitionState)
}

void PartitionState::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PartitionState_ota_5fmetadata_2eproto.base);
  partition_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PartitionState::~PartitionState() {
  // @@protoc_insertion_point(destructor:build.tools.releasetools.PartitionState)
  SharedDtor();
}

void PartitionState::SharedDtor() {
  partition_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PartitionState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PartitionState& PartitionState::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PartitionState_ota_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void PartitionState::Clear() {
// @@protoc_insertion_point(message_clear_start:build.tools.releasetools.PartitionState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_.Clear();
  build_.Clear();
  partition_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PartitionState::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PartitionState*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string partition_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_partition_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string device = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName(nullptr);
          object = msg->add_device();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated string build = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName(nullptr);
          object = msg->add_build();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // string version = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PartitionState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:build.tools.releasetools.PartitionState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string partition_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_partition_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->partition_name().data(), static_cast<int>(this->partition_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "build.tools.releasetools.PartitionState.partition_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string device = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_device()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device(this->device_size() - 1).data(),
            static_cast<int>(this->device(this->device_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "build.tools.releasetools.PartitionState.device"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string build = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_build()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->build(this->build_size() - 1).data(),
            static_cast<int>(this->build(this->build_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "build.tools.releasetools.PartitionState.build"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "build.tools.releasetools.PartitionState.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:build.tools.releasetools.PartitionState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:build.tools.releasetools.PartitionState)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PartitionState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:build.tools.releasetools.PartitionState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string partition_name = 1;
  if (this->partition_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partition_name().data(), static_cast<int>(this->partition_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "build.tools.releasetools.PartitionState.partition_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->partition_name(), output);
  }

  // repeated string device = 2;
  for (int i = 0, n = this->device_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device(i).data(), static_cast<int>(this->device(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "build.tools.releasetools.PartitionState.device");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->device(i), output);
  }

  // repeated string build = 3;
  for (int i = 0, n = this->build_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build(i).data(), static_cast<int>(this->build(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "build.tools.releasetools.PartitionState.build");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->build(i), output);
  }

  // string version = 4;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "build.tools.releasetools.PartitionState.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->version(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:build.tools.releasetools.PartitionState)
}

size_t PartitionState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.tools.releasetools.PartitionState)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string device = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->device_size());
  for (int i = 0, n = this->device_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->device(i));
  }

  // repeated string build = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->build_size());
  for (int i = 0, n = this->build_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->build(i));
  }

  // string partition_name = 1;
  if (this->partition_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->partition_name());
  }

  // string version = 4;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PartitionState::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PartitionState*>(&from));
}

void PartitionState::MergeFrom(const PartitionState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.tools.releasetools.PartitionState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  device_.MergeFrom(from.device_);
  build_.MergeFrom(from.build_);
  if (from.partition_name().size() > 0) {

    partition_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.partition_name_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
}

void PartitionState::CopyFrom(const PartitionState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.tools.releasetools.PartitionState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PartitionState::IsInitialized() const {
  return true;
}

void PartitionState::Swap(PartitionState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PartitionState::InternalSwap(PartitionState* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  device_.InternalSwap(CastToBase(&other->device_));
  build_.InternalSwap(CastToBase(&other->build_));
  partition_name_.Swap(&other->partition_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::std::string PartitionState::GetTypeName() const {
  return "build.tools.releasetools.PartitionState";
}


// ===================================================================

void DeviceState::InitAsDefaultInstance() {
}
class DeviceState::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceState::kDeviceFieldNumber;
const int DeviceState::kBuildFieldNumber;
const int DeviceState::kBuildIncrementalFieldNumber;
const int DeviceState::kTimestampFieldNumber;
const int DeviceState::kSdkLevelFieldNumber;
const int DeviceState::kSecurityPatchLevelFieldNumber;
const int DeviceState::kPartitionStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceState::DeviceState()
  : ::google::protobuf::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:build.tools.releasetools.DeviceState)
}
DeviceState::DeviceState(const DeviceState& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(nullptr),
      device_(from.device_),
      build_(from.build_),
      partition_state_(from.partition_state_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  build_incremental_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.build_incremental().size() > 0) {
    build_incremental_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_incremental_);
  }
  sdk_level_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sdk_level().size() > 0) {
    sdk_level_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdk_level_);
  }
  security_patch_level_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.security_patch_level().size() > 0) {
    security_patch_level_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.security_patch_level_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:build.tools.releasetools.DeviceState)
}

void DeviceState::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DeviceState_ota_5fmetadata_2eproto.base);
  build_incremental_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_level_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  security_patch_level_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = PROTOBUF_LONGLONG(0);
}

DeviceState::~DeviceState() {
  // @@protoc_insertion_point(destructor:build.tools.releasetools.DeviceState)
  SharedDtor();
}

void DeviceState::SharedDtor() {
  build_incremental_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_level_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  security_patch_level_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeviceState& DeviceState::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeviceState_ota_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void DeviceState::Clear() {
// @@protoc_insertion_point(message_clear_start:build.tools.releasetools.DeviceState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_.Clear();
  build_.Clear();
  partition_state_.Clear();
  build_incremental_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_level_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  security_patch_level_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeviceState::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeviceState*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string device = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName(nullptr);
          object = msg->add_device();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated string build = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName(nullptr);
          object = msg->add_build();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // string build_incremental = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_build_incremental();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 timestamp = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_timestamp(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string sdk_level = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_sdk_level();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string security_patch_level = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_security_patch_level();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .build.tools.releasetools.PartitionState partition_state = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::build::tools::releasetools::PartitionState::_InternalParse;
          object = msg->add_partition_state();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 58 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeviceState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:build.tools.releasetools.DeviceState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string device = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_device()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device(this->device_size() - 1).data(),
            static_cast<int>(this->device(this->device_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "build.tools.releasetools.DeviceState.device"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string build = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_build()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->build(this->build_size() - 1).data(),
            static_cast<int>(this->build(this->build_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "build.tools.releasetools.DeviceState.build"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string build_incremental = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_build_incremental()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->build_incremental().data(), static_cast<int>(this->build_incremental().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "build.tools.releasetools.DeviceState.build_incremental"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sdk_level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdk_level()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdk_level().data(), static_cast<int>(this->sdk_level().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "build.tools.releasetools.DeviceState.sdk_level"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string security_patch_level = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_security_patch_level()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->security_patch_level().data(), static_cast<int>(this->security_patch_level().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "build.tools.releasetools.DeviceState.security_patch_level"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .build.tools.releasetools.PartitionState partition_state = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_partition_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:build.tools.releasetools.DeviceState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:build.tools.releasetools.DeviceState)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeviceState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:build.tools.releasetools.DeviceState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string device = 1;
  for (int i = 0, n = this->device_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device(i).data(), static_cast<int>(this->device(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "build.tools.releasetools.DeviceState.device");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->device(i), output);
  }

  // repeated string build = 2;
  for (int i = 0, n = this->build_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build(i).data(), static_cast<int>(this->build(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "build.tools.releasetools.DeviceState.build");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->build(i), output);
  }

  // string build_incremental = 3;
  if (this->build_incremental().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_incremental().data(), static_cast<int>(this->build_incremental().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "build.tools.releasetools.DeviceState.build_incremental");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->build_incremental(), output);
  }

  // int64 timestamp = 4;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->timestamp(), output);
  }

  // string sdk_level = 5;
  if (this->sdk_level().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdk_level().data(), static_cast<int>(this->sdk_level().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "build.tools.releasetools.DeviceState.sdk_level");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sdk_level(), output);
  }

  // string security_patch_level = 6;
  if (this->security_patch_level().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->security_patch_level().data(), static_cast<int>(this->security_patch_level().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "build.tools.releasetools.DeviceState.security_patch_level");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->security_patch_level(), output);
  }

  // repeated .build.tools.releasetools.PartitionState partition_state = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->partition_state_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7,
      this->partition_state(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:build.tools.releasetools.DeviceState)
}

size_t DeviceState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.tools.releasetools.DeviceState)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string device = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->device_size());
  for (int i = 0, n = this->device_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->device(i));
  }

  // repeated string build = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->build_size());
  for (int i = 0, n = this->build_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->build(i));
  }

  // repeated .build.tools.releasetools.PartitionState partition_state = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->partition_state_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->partition_state(static_cast<int>(i)));
    }
  }

  // string build_incremental = 3;
  if (this->build_incremental().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->build_incremental());
  }

  // string sdk_level = 5;
  if (this->sdk_level().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdk_level());
  }

  // string security_patch_level = 6;
  if (this->security_patch_level().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->security_patch_level());
  }

  // int64 timestamp = 4;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceState::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DeviceState*>(&from));
}

void DeviceState::MergeFrom(const DeviceState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.tools.releasetools.DeviceState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  device_.MergeFrom(from.device_);
  build_.MergeFrom(from.build_);
  partition_state_.MergeFrom(from.partition_state_);
  if (from.build_incremental().size() > 0) {

    build_incremental_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_incremental_);
  }
  if (from.sdk_level().size() > 0) {

    sdk_level_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdk_level_);
  }
  if (from.security_patch_level().size() > 0) {

    security_patch_level_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.security_patch_level_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void DeviceState::CopyFrom(const DeviceState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.tools.releasetools.DeviceState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceState::IsInitialized() const {
  return true;
}

void DeviceState::Swap(DeviceState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceState::InternalSwap(DeviceState* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  device_.InternalSwap(CastToBase(&other->device_));
  build_.InternalSwap(CastToBase(&other->build_));
  CastToBase(&partition_state_)->InternalSwap(CastToBase(&other->partition_state_));
  build_incremental_.Swap(&other->build_incremental_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sdk_level_.Swap(&other->sdk_level_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  security_patch_level_.Swap(&other->security_patch_level_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
}

::std::string DeviceState::GetTypeName() const {
  return "build.tools.releasetools.DeviceState";
}


// ===================================================================

void ApexInfo::InitAsDefaultInstance() {
}
class ApexInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApexInfo::kPackageNameFieldNumber;
const int ApexInfo::kVersionFieldNumber;
const int ApexInfo::kIsCompressedFieldNumber;
const int ApexInfo::kDecompressedSizeFieldNumber;
const int ApexInfo::kSourceVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApexInfo::ApexInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:build.tools.releasetools.ApexInfo)
}
ApexInfo::ApexInfo(const ApexInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.package_name().size() > 0) {
    package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_compressed_) -
    reinterpret_cast<char*>(&version_)) + sizeof(is_compressed_));
  // @@protoc_insertion_point(copy_constructor:build.tools.releasetools.ApexInfo)
}

void ApexInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ApexInfo_ota_5fmetadata_2eproto.base);
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_compressed_) -
      reinterpret_cast<char*>(&version_)) + sizeof(is_compressed_));
}

ApexInfo::~ApexInfo() {
  // @@protoc_insertion_point(destructor:build.tools.releasetools.ApexInfo)
  SharedDtor();
}

void ApexInfo::SharedDtor() {
  package_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ApexInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApexInfo& ApexInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ApexInfo_ota_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void ApexInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:build.tools.releasetools.ApexInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_compressed_) -
      reinterpret_cast<char*>(&version_)) + sizeof(is_compressed_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ApexInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ApexInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string package_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_package_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 version = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool is_compressed = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_is_compressed(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 decompressed_size = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_decompressed_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 source_version = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_source_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ApexInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:build.tools.releasetools.ApexInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string package_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->package_name().data(), static_cast<int>(this->package_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "build.tools.releasetools.ApexInfo.package_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_compressed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_compressed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 decompressed_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &decompressed_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 source_version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &source_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:build.tools.releasetools.ApexInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:build.tools.releasetools.ApexInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ApexInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:build.tools.releasetools.ApexInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string package_name = 1;
  if (this->package_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "build.tools.releasetools.ApexInfo.package_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->package_name(), output);
  }

  // int64 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->version(), output);
  }

  // bool is_compressed = 3;
  if (this->is_compressed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_compressed(), output);
  }

  // int64 decompressed_size = 4;
  if (this->decompressed_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->decompressed_size(), output);
  }

  // int64 source_version = 5;
  if (this->source_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->source_version(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:build.tools.releasetools.ApexInfo)
}

size_t ApexInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.tools.releasetools.ApexInfo)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string package_name = 1;
  if (this->package_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->package_name());
  }

  // int64 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->version());
  }

  // int64 decompressed_size = 4;
  if (this->decompressed_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->decompressed_size());
  }

  // int64 source_version = 5;
  if (this->source_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->source_version());
  }

  // bool is_compressed = 3;
  if (this->is_compressed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApexInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ApexInfo*>(&from));
}

void ApexInfo::MergeFrom(const ApexInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.tools.releasetools.ApexInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.package_name().size() > 0) {

    package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.decompressed_size() != 0) {
    set_decompressed_size(from.decompressed_size());
  }
  if (from.source_version() != 0) {
    set_source_version(from.source_version());
  }
  if (from.is_compressed() != 0) {
    set_is_compressed(from.is_compressed());
  }
}

void ApexInfo::CopyFrom(const ApexInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.tools.releasetools.ApexInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApexInfo::IsInitialized() const {
  return true;
}

void ApexInfo::Swap(ApexInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApexInfo::InternalSwap(ApexInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  package_name_.Swap(&other->package_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(version_, other->version_);
  swap(decompressed_size_, other->decompressed_size_);
  swap(source_version_, other->source_version_);
  swap(is_compressed_, other->is_compressed_);
}

::std::string ApexInfo::GetTypeName() const {
  return "build.tools.releasetools.ApexInfo";
}


// ===================================================================

void ApexMetadata::InitAsDefaultInstance() {
}
class ApexMetadata::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApexMetadata::kApexInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApexMetadata::ApexMetadata()
  : ::google::protobuf::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:build.tools.releasetools.ApexMetadata)
}
ApexMetadata::ApexMetadata(const ApexMetadata& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(nullptr),
      apex_info_(from.apex_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:build.tools.releasetools.ApexMetadata)
}

void ApexMetadata::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ApexMetadata_ota_5fmetadata_2eproto.base);
}

ApexMetadata::~ApexMetadata() {
  // @@protoc_insertion_point(destructor:build.tools.releasetools.ApexMetadata)
  SharedDtor();
}

void ApexMetadata::SharedDtor() {
}

void ApexMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApexMetadata& ApexMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ApexMetadata_ota_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void ApexMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:build.tools.releasetools.ApexMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apex_info_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ApexMetadata::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ApexMetadata*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .build.tools.releasetools.ApexInfo apex_info = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::build::tools::releasetools::ApexInfo::_InternalParse;
          object = msg->add_apex_info();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ApexMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:build.tools.releasetools.ApexMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .build.tools.releasetools.ApexInfo apex_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_apex_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:build.tools.releasetools.ApexMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:build.tools.releasetools.ApexMetadata)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ApexMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:build.tools.releasetools.ApexMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .build.tools.releasetools.ApexInfo apex_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apex_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->apex_info(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:build.tools.releasetools.ApexMetadata)
}

size_t ApexMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.tools.releasetools.ApexMetadata)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .build.tools.releasetools.ApexInfo apex_info = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->apex_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->apex_info(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApexMetadata::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ApexMetadata*>(&from));
}

void ApexMetadata::MergeFrom(const ApexMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.tools.releasetools.ApexMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  apex_info_.MergeFrom(from.apex_info_);
}

void ApexMetadata::CopyFrom(const ApexMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.tools.releasetools.ApexMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApexMetadata::IsInitialized() const {
  return true;
}

void ApexMetadata::Swap(ApexMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApexMetadata::InternalSwap(ApexMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&apex_info_)->InternalSwap(CastToBase(&other->apex_info_));
}

::std::string ApexMetadata::GetTypeName() const {
  return "build.tools.releasetools.ApexMetadata";
}


// ===================================================================

OtaMetadata_PropertyFilesEntry_DoNotUse::OtaMetadata_PropertyFilesEntry_DoNotUse() {}
OtaMetadata_PropertyFilesEntry_DoNotUse::OtaMetadata_PropertyFilesEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void OtaMetadata_PropertyFilesEntry_DoNotUse::MergeFrom(const OtaMetadata_PropertyFilesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OtaMetadata_PropertyFilesEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapFieldLite<
      OtaMetadata_PropertyFilesEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "build.tools.releasetools.OtaMetadata.PropertyFilesEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "build.tools.releasetools.OtaMetadata.PropertyFilesEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void OtaMetadata::InitAsDefaultInstance() {
  ::build::tools::releasetools::_OtaMetadata_default_instance_._instance.get_mutable()->precondition_ = const_cast< ::build::tools::releasetools::DeviceState*>(
      ::build::tools::releasetools::DeviceState::internal_default_instance());
  ::build::tools::releasetools::_OtaMetadata_default_instance_._instance.get_mutable()->postcondition_ = const_cast< ::build::tools::releasetools::DeviceState*>(
      ::build::tools::releasetools::DeviceState::internal_default_instance());
}
class OtaMetadata::HasBitSetters {
 public:
  static const ::build::tools::releasetools::DeviceState& precondition(const OtaMetadata* msg);
  static const ::build::tools::releasetools::DeviceState& postcondition(const OtaMetadata* msg);
};

const ::build::tools::releasetools::DeviceState&
OtaMetadata::HasBitSetters::precondition(const OtaMetadata* msg) {
  return *msg->precondition_;
}
const ::build::tools::releasetools::DeviceState&
OtaMetadata::HasBitSetters::postcondition(const OtaMetadata* msg) {
  return *msg->postcondition_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OtaMetadata::kTypeFieldNumber;
const int OtaMetadata::kWipeFieldNumber;
const int OtaMetadata::kDowngradeFieldNumber;
const int OtaMetadata::kPropertyFilesFieldNumber;
const int OtaMetadata::kPreconditionFieldNumber;
const int OtaMetadata::kPostconditionFieldNumber;
const int OtaMetadata::kRetrofitDynamicPartitionsFieldNumber;
const int OtaMetadata::kRequiredCacheFieldNumber;
const int OtaMetadata::kSplDowngradeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OtaMetadata::OtaMetadata()
  : ::google::protobuf::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:build.tools.releasetools.OtaMetadata)
}
OtaMetadata::OtaMetadata(const OtaMetadata& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  property_files_.MergeFrom(from.property_files_);
  if (from.has_precondition()) {
    precondition_ = new ::build::tools::releasetools::DeviceState(*from.precondition_);
  } else {
    precondition_ = nullptr;
  }
  if (from.has_postcondition()) {
    postcondition_ = new ::build::tools::releasetools::DeviceState(*from.postcondition_);
  } else {
    postcondition_ = nullptr;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&required_cache_) -
    reinterpret_cast<char*>(&type_)) + sizeof(required_cache_));
  // @@protoc_insertion_point(copy_constructor:build.tools.releasetools.OtaMetadata)
}

void OtaMetadata::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_OtaMetadata_ota_5fmetadata_2eproto.base);
  ::memset(&precondition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&required_cache_) -
      reinterpret_cast<char*>(&precondition_)) + sizeof(required_cache_));
}

OtaMetadata::~OtaMetadata() {
  // @@protoc_insertion_point(destructor:build.tools.releasetools.OtaMetadata)
  SharedDtor();
}

void OtaMetadata::SharedDtor() {
  if (this != internal_default_instance()) delete precondition_;
  if (this != internal_default_instance()) delete postcondition_;
}

void OtaMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OtaMetadata& OtaMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_OtaMetadata_ota_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void OtaMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:build.tools.releasetools.OtaMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_files_.Clear();
  if (GetArenaNoVirtual() == nullptr && precondition_ != nullptr) {
    delete precondition_;
  }
  precondition_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && postcondition_ != nullptr) {
    delete postcondition_;
  }
  postcondition_ = nullptr;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&required_cache_) -
      reinterpret_cast<char*>(&type_)) + sizeof(required_cache_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OtaMetadata::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<OtaMetadata*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .build.tools.releasetools.OtaMetadata.OtaType type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_type(static_cast<::build::tools::releasetools::OtaMetadata_OtaType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool wipe = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_wipe(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool downgrade = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_downgrade(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // map<string, string> property_files = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::build::tools::releasetools::OtaMetadata_PropertyFilesEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->property_files_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // .build.tools.releasetools.DeviceState precondition = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::build::tools::releasetools::DeviceState::_InternalParse;
        object = msg->mutable_precondition();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .build.tools.releasetools.DeviceState postcondition = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::build::tools::releasetools::DeviceState::_InternalParse;
        object = msg->mutable_postcondition();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool retrofit_dynamic_partitions = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_retrofit_dynamic_partitions(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 required_cache = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_required_cache(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool spl_downgrade = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_spl_downgrade(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OtaMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:build.tools.releasetools.OtaMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .build.tools.releasetools.OtaMetadata.OtaType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::build::tools::releasetools::OtaMetadata_OtaType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool wipe = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &wipe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool downgrade = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &downgrade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> property_files = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          OtaMetadata_PropertyFilesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapFieldLite<
              OtaMetadata_PropertyFilesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&property_files_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "build.tools.releasetools.OtaMetadata.PropertyFilesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "build.tools.releasetools.OtaMetadata.PropertyFilesEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .build.tools.releasetools.DeviceState precondition = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_precondition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .build.tools.releasetools.DeviceState postcondition = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_postcondition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool retrofit_dynamic_partitions = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &retrofit_dynamic_partitions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 required_cache = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &required_cache_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool spl_downgrade = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &spl_downgrade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:build.tools.releasetools.OtaMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:build.tools.releasetools.OtaMetadata)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OtaMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:build.tools.releasetools.OtaMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .build.tools.releasetools.OtaMetadata.OtaType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // bool wipe = 2;
  if (this->wipe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->wipe(), output);
  }

  // bool downgrade = 3;
  if (this->downgrade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->downgrade(), output);
  }

  // map<string, string> property_files = 4;
  if (!this->property_files().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "build.tools.releasetools.OtaMetadata.PropertyFilesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "build.tools.releasetools.OtaMetadata.PropertyFilesEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->property_files().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->property_files().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->property_files().begin();
          it != this->property_files().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<OtaMetadata_PropertyFilesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(property_files_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(4, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<OtaMetadata_PropertyFilesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->property_files().begin();
          it != this->property_files().end(); ++it) {
        entry.reset(property_files_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(4, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .build.tools.releasetools.DeviceState precondition = 5;
  if (this->has_precondition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, HasBitSetters::precondition(this), output);
  }

  // .build.tools.releasetools.DeviceState postcondition = 6;
  if (this->has_postcondition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, HasBitSetters::postcondition(this), output);
  }

  // bool retrofit_dynamic_partitions = 7;
  if (this->retrofit_dynamic_partitions() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->retrofit_dynamic_partitions(), output);
  }

  // int64 required_cache = 8;
  if (this->required_cache() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->required_cache(), output);
  }

  // bool spl_downgrade = 9;
  if (this->spl_downgrade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->spl_downgrade(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:build.tools.releasetools.OtaMetadata)
}

size_t OtaMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.tools.releasetools.OtaMetadata)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> property_files = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->property_files_size());
  {
    ::std::unique_ptr<OtaMetadata_PropertyFilesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->property_files().begin();
        it != this->property_files().end(); ++it) {
      entry.reset(property_files_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .build.tools.releasetools.DeviceState precondition = 5;
  if (this->has_precondition()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *precondition_);
  }

  // .build.tools.releasetools.DeviceState postcondition = 6;
  if (this->has_postcondition()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *postcondition_);
  }

  // .build.tools.releasetools.OtaMetadata.OtaType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // bool wipe = 2;
  if (this->wipe() != 0) {
    total_size += 1 + 1;
  }

  // bool downgrade = 3;
  if (this->downgrade() != 0) {
    total_size += 1 + 1;
  }

  // bool retrofit_dynamic_partitions = 7;
  if (this->retrofit_dynamic_partitions() != 0) {
    total_size += 1 + 1;
  }

  // bool spl_downgrade = 9;
  if (this->spl_downgrade() != 0) {
    total_size += 1 + 1;
  }

  // int64 required_cache = 8;
  if (this->required_cache() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->required_cache());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OtaMetadata::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OtaMetadata*>(&from));
}

void OtaMetadata::MergeFrom(const OtaMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.tools.releasetools.OtaMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_files_.MergeFrom(from.property_files_);
  if (from.has_precondition()) {
    mutable_precondition()->::build::tools::releasetools::DeviceState::MergeFrom(from.precondition());
  }
  if (from.has_postcondition()) {
    mutable_postcondition()->::build::tools::releasetools::DeviceState::MergeFrom(from.postcondition());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.wipe() != 0) {
    set_wipe(from.wipe());
  }
  if (from.downgrade() != 0) {
    set_downgrade(from.downgrade());
  }
  if (from.retrofit_dynamic_partitions() != 0) {
    set_retrofit_dynamic_partitions(from.retrofit_dynamic_partitions());
  }
  if (from.spl_downgrade() != 0) {
    set_spl_downgrade(from.spl_downgrade());
  }
  if (from.required_cache() != 0) {
    set_required_cache(from.required_cache());
  }
}

void OtaMetadata::CopyFrom(const OtaMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.tools.releasetools.OtaMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OtaMetadata::IsInitialized() const {
  return true;
}

void OtaMetadata::Swap(OtaMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OtaMetadata::InternalSwap(OtaMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  property_files_.Swap(&other->property_files_);
  swap(precondition_, other->precondition_);
  swap(postcondition_, other->postcondition_);
  swap(type_, other->type_);
  swap(wipe_, other->wipe_);
  swap(downgrade_, other->downgrade_);
  swap(retrofit_dynamic_partitions_, other->retrofit_dynamic_partitions_);
  swap(spl_downgrade_, other->spl_downgrade_);
  swap(required_cache_, other->required_cache_);
}

::std::string OtaMetadata::GetTypeName() const {
  return "build.tools.releasetools.OtaMetadata";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace releasetools
}  // namespace tools
}  // namespace build
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::build::tools::releasetools::PartitionState* Arena::CreateMaybeMessage< ::build::tools::releasetools::PartitionState >(Arena* arena) {
  return Arena::CreateInternal< ::build::tools::releasetools::PartitionState >(arena);
}
template<> PROTOBUF_NOINLINE ::build::tools::releasetools::DeviceState* Arena::CreateMaybeMessage< ::build::tools::releasetools::DeviceState >(Arena* arena) {
  return Arena::CreateInternal< ::build::tools::releasetools::DeviceState >(arena);
}
template<> PROTOBUF_NOINLINE ::build::tools::releasetools::ApexInfo* Arena::CreateMaybeMessage< ::build::tools::releasetools::ApexInfo >(Arena* arena) {
  return Arena::CreateInternal< ::build::tools::releasetools::ApexInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::build::tools::releasetools::ApexMetadata* Arena::CreateMaybeMessage< ::build::tools::releasetools::ApexMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::build::tools::releasetools::ApexMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::build::tools::releasetools::OtaMetadata_PropertyFilesEntry_DoNotUse* Arena::CreateMaybeMessage< ::build::tools::releasetools::OtaMetadata_PropertyFilesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::build::tools::releasetools::OtaMetadata_PropertyFilesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::build::tools::releasetools::OtaMetadata* Arena::CreateMaybeMessage< ::build::tools::releasetools::OtaMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::build::tools::releasetools::OtaMetadata >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
